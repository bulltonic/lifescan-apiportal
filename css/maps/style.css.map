{"version":3,"sources":["style.scss","tonic/base/_typography.scss","tonic/utilities/_variables.scss","tonic/base/_helpers.scss","tonic/components/_header.scss","tonic/components/_buttons.scss","tonic/components/_hero.scss","tonic/utilities/_mixins.scss"],"names":[],"mappings":"AAAA;;GAEG,KCIF,8ECwC4E,CDvC5E,KAEC,oBAAqB,CACtB,kCAMA,cACA,eACA,eAAgB,CAChB,kBAOA,WACA,kCACA,cACA,aACA,eAAgB,CAChB,EA0BA,gBACG,eACA,qBAAA,AAAa,iBAAb,AAAa,YAAA,CAChB,EAEA,oBAAqB,CACrB,cAKA,iBAAkB,CAClB,OAGA,gBAAiB,CACjB,WAGA,eACA,iBAAkB,CAClB,oDAKA,UAAW,CACX,aAGA,YAAa,CACb,GAEA,sBACA,SACA,WACA,mBAAoB,CACpB,QAEA,gBAAiB,CACjB,IAEA,gBACA,mDACA,eACA,oBACA,gBACA,oBACA,eACA,cACA,aAAc,CACd,gBAKA,2EACA,eACA,mBAAoB,CACpB,aAGA,8BACA,WAAY,CACZ,SAGA,mBACA,oBAAqB,CACrB,IAEA,cAAe,CACf,MAEC,aAAc,CACf,qBE5HG,WACA,aAAa,CAChB,UAEG,UAAU,CACb,KAEC,MAAQ,CACT,UASC,8BACA,6BACA,WACA,UACA,gBACA,2BAA4B,CAC7B,eAEC,yBACA,kBACA,uCACA,qBACA,cACA,cACA,eACA,mBACA,iBACA,YACA,SACA,mBACA,uBACA,qBACA,QACA,WACA,cAAe,CAChB,8BAKC,SAAU,CACX,WAOC,eACA,WACA,kBAAmB,CACpB,YAEC,eACA,YACA,iBAAkB,CACnB,aAEC,WACA,cACA,iBACA,iBAAkB,CACnB,WAOA,0BAA2B,CAC3B,aAEA,4BAA6B,CAC7B,YAEA,2BAA4B,CAC5B,gBAOA,cACA,YACA,UAAW,CACX,gBAEA,mBACA,YACA,WACA,qBAAsB,CACtB,QCtGG,cACA,YACA,WACA,iBAAkB,CAJrB,UAMI,mBACA,YACA,WACA,qBAAsB,CAT1B,YAYI,qBACA,WACA,WAAY,CACf,WCdD,yBACA,WACA,gBAAiB,CACjB,cCHA,kBACA,SAAU,CAFX,4BAIK,kBACA,UACA,WACA,kBACA,mBAAoB,CC8OvB,0BDtPF,4BAUM,eAAgB,CAKjB,CC0OH,0BDzPF,4BAaM,eAAgB,CAEjB,CAfL,+BAiBK,6DACH,sBACA,WACA,WACA,YACA,kBACA,MACA,OACA,SAAU,CAzBZ,0BA4BK,cACH,eACA,iBACA,yBACA,iBACA,cACA,kBAAmB,CAlCrB,iBAqCK,mBACA,iBAAkB,CAtCvB,gCAyCK,gBACA,aAAc,CA1CnB,kCA4CM,qBAAA,AAAa,iBAAb,AAAa,YAAA,CACb","file":"../style.css","sourcesContent":["/*!\n * Custom styles outside of bootstrap\n */\n\n// 1. Configuration and helpers\n@import\n    'tonic/utilities/_fonts',\n    'tonic/utilities/_variables',\n    'tonic/utilities/_mixins';\n\n// 2. Base\n@import\n    'tonic/base/_typography',\n    'tonic/base/_helpers';\n\n// 3. Components\n@import\n  \t'tonic/components/_header',\n  \t'tonic/components/_buttons',\n    'tonic/components/_hero';\n","/* ==============================================================\n# Typography:\n# This file contains general typography styles.\n============================================================== */\n\nhtml {\n\tfont: normal 16px / 1.65 $sansSerif;\n}\nbody {\n  word-wrap: break-word;\n}\nbody,\nbutton,\ninput,\nselect,\ntextarea {\n\tcolor: #404040;\n\tfont-size: 1rem;\n\tline-height: 1.5;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\tclear: both;\n\ttext-rendering: optimizeLegibility;\n\tline-height: 1;\n\tmargin-top: 0;\n\tfont-weight: 700;\n}\n/*h1 {\n  font-size: 2.986em;\n  margin-bottom: 2.42424rem;\n}\nh2 {\n  font-size: 2.488em;\n  margin-bottom: 2.0202rem;\n}\nh3 {\n  font-size: 2.074em;\n  margin-bottom: 1.61616rem;\n}\nh4 {\n  font-size: 1.728em;\n  margin-bottom: 1.21212rem;\n}\nh5 {\n  font-size: 1.44em;\n  margin-bottom: 0.80808rem;\n}\nh6 {\n  font-size: 1.2em;\n  margin-bottom: 0.60606rem;\n}*/\np {\n\tline-height: 1.5;\n    margin: 0 0 1em;\n    hyphens: auto; \n}\na {\n\ttext-decoration: none;\n}\ndfn,\ncite,\nem,\ni {\n\tfont-style: italic;\n}\n\nstrong  {\n\tfont-weight: bold;\n}\n\nblockquote {\n\tmargin: 0 1.5em;\n\tfont-style: italic; \n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n\tcontent: \"\";\n}\nblockquote,\nq {\n\tquotes: \"\" \"\";\n}\nhr {\n\tbackground-color: #ccc;\n\tborder: 0;\n\theight: 1px;\n\tmargin-bottom: 1.5em;\n}\naddress {\n\tmargin: 0 0 1.5em;\n}\npre {\n\tbackground: #eee;\n\tfont-family: \"Courier 10 Pitch\", Courier, monospace;\n\tfont-size: 15px;\n\tfont-size: 0.9375rem;\n\tline-height: 1.6;\n\tmargin-bottom: 1.6em;\n\tmax-width: 100%;\n\toverflow: auto;\n\tpadding: 1.6em;\n}\ncode,\nkbd,\ntt,\nvar {\n\tfont-family: Monaco, Consolas, \"Andale Mono\", \"DejaVu Sans Mono\", monospace;\n\tfont-size: 15px;\n\tfont-size: 0.9375rem;\n}\nabbr,\nacronym {\n\tborder-bottom: 1px dotted #666;\n\tcursor: help;\n}\nmark,\nins {\n\tbackground: #fff9c0;\n\ttext-decoration: none;\n}\nbig {\n\tfont-size: 125%;\n}\nsmall {\n  font-size: 65%;\n}","/*==============================================================\n# Variables\n==============================================================*/\n\n// Colors\n// --------------------------------------------------\n\n$white:\t\t\t\t\t\t\t#fff !default;\n$black:\t\t\t\t\t\t\t#000;\n$grayDark:              \t\t#121212;\n$grayMed:\t\t\t\t\t\t#3d4556;\n$grayLight:\t\t\t\t\t\t#e0e0e0;\n$gray:\t\t\t\t\t\t\t#a4a4a4;\n$green:\t\t\t\t\t\t\t#00a919;\n\n\n// Scaffolding\n// --------------------------------------------------\n\n$bodyBackground:        \t\t$white !default;\n$textColor:             \t\t$grayDark !default;\n\n\n// Links\n// --------------------------------------------------\n\n$linkColor:             \t\tblue !default;\n$linkColorHover:        \t\tdarken($linkColor, 15%) !default;\n\n// Buttons\n// --------------------------------------------------\n\n$buttonBackground:\t\t\t\t$gray;\n$buttonColor:\t\t\t\t\t$white;\n$buttonBackgroundHover:\t\t\t$grayLight;\n$buttonColorHover:\t\t\t\t$gray;\n\n// Transitions\n// --------------------------------------------------\n\n$cbTrans: \t\t\t\t\t\tcubic-bezier(0.165, 0.84, 0.44, 1);\n$pageTrans: \t\t\t\t\tcubic-bezier(.54,.06,.55,.97);\n\n// Typography\n// --------------------------------------------------\n\n$sansSerif:\t\t\t\t\t\t'Montserrat', \"Helvetica Neue\", Helvetica, Arial, sans-serif !default;\n$serif:\t\t\t\t\t\t\tTimes, Georgia, serif;\n\t\t\n$baseFontSize:          \t\t16px !default;\n$baseLineHeight:        \t\t1.65 !default;\n\n// Media query breakpoints\n// --------------------------------------------------\n\n// Extra small screen / phone\n$screen-xs:                  \t480px !default;\n$screen-phone:               \t$screen-xs !default;\n\n// Small screen / tablet\n$screen-sm:                  \t768px !default;\n$screen-tablet:              \t$screen-sm !default;\n\n// Medium screen / desktop\n$screen-md:                  \t992px !default;\n$screen-desktop:             \t$screen-md !default;\n\n// Large screen / wide desktop\n$screen-lg:                  \t1220px !default;\n$screen-lg-desktop:          \t$screen-lg !default;\n\n// So media queries don't overlap when required, provide a maximum\n$screen-xs-max:              \t($screen-sm - 1) !default;\n$screen-sm-max:              \t($screen-md - 1) !default;\n$screen-md-max:              \t($screen-lg - 1) !default;\n\n// Grid system\n// --------------------------------------------------\n\n// Number of columns in the grid system\n$grid-columns:              \t12 !default;\n// Padding, to be divided by two and applied to the left and right of all columns\n$grid-gutter-width:         \t30px !default;\n// Point at which the navbar stops collapsing\n$grid-float-breakpoint:     \t$screen-tablet !default;\n\n// Container sizes\n// --------------------------------------------------\n\n// Small screen / tablet\n$container-tablet:            \t((720px + $grid-gutter-width)) !default;\n\n// Medium screen / desktop\n$container-desktop:           \t((940px + $grid-gutter-width)) !default;\n\n// Large screen / wide desktop\n$container-lg-desktop:        \t((1140px + $grid-gutter-width)) !default;\n","/* ==============================================================\n# Helpers:\n# This contains CSS \"helper\" classes to be used as modifiers\n============================================================== */\n\n/* Clear inner floats*/\n.cf:before,\n.cf:after {\n    content:\"\";\n    display:table;\n}\n.cf:after {\n    clear:both;\n}\n.cf{\n  *zoom: 1;\n}\n\n/*--------------------------------------------------------------\n# Accessibility\n--------------------------------------------------------------*/\n\n/* Text meant only for screen readers. */\n\n.srt-only {\n  clip: rect(1px, 1px, 1px, 1px);\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  word-wrap: normal !important; /* Many screen reader and browser combinations announce broken words as they would appear visually. */\n}\n.rt-only:focus {\n  background-color: #f1f1f1;\n  border-radius: 3px;\n  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\n  clip: auto !important;\n  color: #21759b;\n  display: block;\n  font-size: 14px;\n  font-size: 0.875rem;\n  font-weight: bold;\n  height: auto;\n  left: 5px;\n  line-height: normal;\n  padding: 15px 23px 14px;\n  text-decoration: none;\n  top: 5px;\n  width: auto;\n  z-index: 100000; /* Above WP toolbar. */\n}\n\n/* Do not show the outline on the skip link target. */\n\n#content[tabindex=\"-1\"]:focus {\n  outline: 0;\n}\n\n/*--------------------------------------------------------------\n# Alignments\n--------------------------------------------------------------*/\n\n.alignleft {\n  display: inline;\n  float: left;\n  margin-right: 1.5em;\n}\n.alignright {\n  display: inline;\n  float: right;\n  margin-left: 1.5em;\n}\n.aligncenter {\n  clear: both;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n/*--------------------------------------------------------------\n# Text alignment helpers\n --------------------------------------------------------------*/\n\n.text-left {\n\ttext-align: left !important;\n}\n.text-center {\n\ttext-align: center !important;\n}\n.text-right {\n\ttext-align: right !important;\n}\n\n/*--------------------------------------------------------------\n * Vertically center content\n --------------------------------------------------------------*/\n\n.center-wrapper {\n\tdisplay: table;\n\theight: 100%;\n\twidth: 100%;\n}\n.center-content {\n\tdisplay: table-cell;\n\theight: 100%;\n\twidth: 100%;\n\tvertical-align: middle;\n}","/*==============================================================\n# Header\n==============================================================*/\n\n .header {\n    display: table;\n    height: 75px;\n    width: 100%;\n    text-align: center;\n\ti {\n\t    display: table-cell;\n\t    height: 100%;\n\t    width: 100%;\n\t    vertical-align: middle;\n\t}\n\tsvg {\n\t    display: inline-block;\n\t    width: 50px;\n\t    height: 50px;\n\t}\n}","/*==============================================================\n# Header\n==============================================================*/\n\n.btn-green {\n\tbackground-color: $green;\n\tcolor: $white;\n\tfont-weight: bold;\n}"," /*==============================================================\n# Heros\n==============================================================*/\n\n.hero-section {\n\tposition: relative;\n\tz-index: 1;\n    .hero-content {\n    \tposition: relative;\n    \tz-index: 2;\n    \tcolor: $white;\n    \ttext-align: center;\n    \tpadding: 40px 0 60px;\n    \t@include breakFirst(medium) {\n    \t\tpadding: 100px 0;\n    \t}\n    \t@include breakFirst(large) {\n    \t\tpadding: 180px 0;\n    \t}\n    }\n    .hero-background {\n    \tbackground-image: url('../img/fingerprint-texture-green.png');\n\t\tbackground-size: cover;\n\t\tcontent: \"\";\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: 0;\n    }\n \t.hero-intro {\n    \tdisplay: block;\n\t\tfont-size: 14px;\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tline-height: 1.43;\n\t\tcolor: $grayMed;\n\t\tmargin: 10px 0 15px;\n    }\n    h1 {\n    \tfont-weight: normal;\n    \tmargin: 5px 0 40px;\n    }\n    .hero-description {\n    \tmax-width: 585px;\n    \tmargin: 0 auto;\n    \tp {\n    \t\thyphens: none;\n    \t}\n    }\n}","/*==============================================================\n# Mixins\n==============================================================*/\n\n// Clearfix\n// --------------------------------------------------\n\n// Source: http://nicolasgallagher.com/micro-clearfix-hack/\n//\n// For modern browsers\n// 1. The space content is one way to avoid an Opera bug when the\n//    contenteditable attribute is included anywhere else in the document.\n//    Otherwise it causes space to appear at the top and bottom of elements\n//    that are clearfixed.\n// 2. The use of `table` rather than `block` is only necessary if using\n//    `:before` to contain the top-margins of child elements.\n\n@mixin clearfix() {\n\t&:before,\n\t&:after {\n\tcontent: \" \"; /* 1 */\n\t\tdisplay: table; /* 2 */\n\t}\n\t&:after {\n\t\tclear: both;\n\t}\n}\n\n// Transitions\n// --------------------------------------------------\n\n@mixin trans($property, $time, $effect) {\n\ttransition: $property $time $effect;\n}\n\n// Vertically Align\n// --------------------------------------------------\n\n@mixin vertical-align {\n\tposition: relative;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n}\n\n// Center Align\n// --------------------------------------------------\n\n@mixin center {\n\tposition: relative;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n}\n\n// Horizontal Align\n// --------------------------------------------------\n\n@mixin horizontal-align {\n\tposition: relative;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n}\n\n// Translates\n// --------------------------------------------------\n\n@mixin translate($x, $y) {\n\ttransform: translate($x,$y);\n}\n\n// Rotates\n// --------------------------------------------------\n\n@mixin rotate($deg) {\n\ttransform: rotate($deg);\n}\n\n// Background Size Cover\n// --------------------------------------------------\n\n@mixin bdg-cover {\n\tbackground-size: cover;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n}\n\n// Backface Visibility\n// --------------------------------------------------\n\n@mixin backface ($visibility) {\n\tbackface-visibility: $visibility;\n}\n\n// Grid System\n// --------------------------------------------------\n\n// Centered container element\n@mixin container-fixed() {\n\tmargin-right: auto;\n\tmargin-left: auto;\n\tpadding-left:  ($grid-gutter-width / 2);\n\tpadding-right: ($grid-gutter-width / 2);\n\t@include clearfix();\n}\n\n// Creates a wrapper for a series of columns\n@mixin make-row($gutter: $grid-gutter-width) {\n\tmargin-left:  ($gutter / -2);\n\tmargin-right: ($gutter / -2);\n\t@include clearfix();\n}\n\n// Generate the extra small columns\n@mixin make-xs-column($columns, $gutter: $grid-gutter-width) {\n\tposition: relative;\n\tfloat: left;\n\twidth: percentage(($columns / $grid-columns));\n\t// Prevent columns from collapsing when empty\n\tmin-height: 1px;\n\t// Inner gutter via padding\n\tpadding-left:  ($gutter / 2);\n\tpadding-right: ($gutter / 2);\n}\n\n// Generate the small columns\n@mixin make-sm-column($columns, $gutter: $grid-gutter-width) {\n\tposition: relative;\n\t// Prevent columns from collapsing when empty\n\tmin-height: 1px;\n\t// Inner gutter via padding\n\tpadding-left:  ($gutter / 2);\n\tpadding-right: ($gutter / 2);\n\t// Calculate width based on number of columns available\n\t@media (min-width: $screen-sm) {\n\t\tfloat: left;\n\t\twidth: percentage(($columns / $grid-columns));\n\t}\n}\n\n// Generate the small column offsets\n@mixin make-sm-column-offset($columns) {\n\t@media (min-width: $screen-sm) {\n\t\tmargin-left: percentage(($columns / $grid-columns));\n\t}\n}\n@mixin make-sm-column-push($columns) {\n\t@media (min-width: $screen-sm) {\n\t\tleft: percentage(($columns / $grid-columns));\n\t}\n}\n@mixin make-sm-column-pull($columns) {\n\t@media (min-width: $screen-sm) {\n\t\tright: percentage(($columns / $grid-columns));\n\t}\n}\n\n// Generate the medium columns\n@mixin make-md-column($columns, $gutter: $grid-gutter-width) {\n\tposition: relative;\n\t// Prevent columns from collapsing when empty\n\tmin-height: 1px;\n\t// Inner gutter via padding\n\tpadding-left:  ($gutter / 2);\n\tpadding-right: ($gutter / 2);\n\t// Calculate width based on number of columns available\n\t@media (min-width: $screen-md) {\n\t\tfloat: left;\n\t\twidth: percentage(($columns / $grid-columns));\n\t}\n}\n\n// Generate the large column offsets\n@mixin make-md-column-offset($columns) {\n\t@media (min-width: $screen-md) {\n\t\tmargin-left: percentage(($columns / $grid-columns));\n\t}\n}\n@mixin make-md-column-push($columns) {\n\t@media (min-width: $screen-md) {\n\t\tleft: percentage(($columns / $grid-columns));\n\t}\n}\n@mixin make-md-column-pull($columns) {\n\t@media (min-width: $screen-md) {\n\t\tright: percentage(($columns / $grid-columns));\n\t}\n}\n\n// Generate the large columns\n@mixin make-lg-column($columns, $gutter: $grid-gutter-width) {\n\tposition: relative;\n\t// Prevent columns from collapsing when empty\n\tmin-height: 1px;\n\t// Inner gutter via padding\n\tpadding-left:  ($gutter / 2);\n\tpadding-right: ($gutter / 2);\n\t// Calculate width based on number of columns available\n\t@media (min-width: $screen-lg) {\n\t\tfloat: left;\n\t\twidth: percentage(($columns / $grid-columns));\n\t}\n}\n\n// Generate the large column offsets\n@mixin make-lg-column-offset($columns) {\n\t@media (min-width: $screen-lg) {\n\t\tmargin-left: percentage(($columns / $grid-columns));\n\t}\n}\n@mixin make-lg-column-push($columns) {\n\t@media (min-width: $screen-lg) {\n\t\tleft: percentage(($columns / $grid-columns));\n\t}\n}\n@mixin make-lg-column-pull($columns) {\n\t@media (min-width: $screen-lg) {\n\t\tright: percentage(($columns / $grid-columns));\n\t}\n}\n\n// Responsive breakpoints\n// --------------------------------------------------\n\n@mixin break($media) {\n\t@if $media == small {\n\t\t@media (max-width: 767px) { @content; }\n\t}\n\t@else if $media == medium {\n\t\t@media (min-width: $screen-tablet) and (max-width: $screen-desktop) { @content; }\n\t\t@media (min-width: $screen-tablet) and (max-width: 1024px) and (orientation: landscape) {@content;}\n\t}\n\t@else if $media == mediumLand {\n\t\t@media (min-width: $screen-tablet) and (max-width: 1024px) and (orientation: landscape) {@content;}\n\t}\n\t@else if $media == mediumPort {\n\t\t@media (min-width: $screen-tablet) and (max-width: $screen-desktop) { @content; }\n\t}\n\t@else if $media == wide {\n\t\t@media only screen and (min-width: $screen-lg-desktop) { @content; }\n\t}\n\t@else {\n\t\t@media (min-width: $media) { @content; }\n\t}\n}\n\n// Mobile first responsive breakpoints\n// --------------------------------------------------\n\n@mixin breakFirst($media) {\n\t@if $media == medium {\n\t\t@media (min-width: $screen-tablet) { @content; }\n\t}\n\t@else if $media == large {\n\t\t@media (min-width: $screen-desktop) { @content; }\n\t}\n\t@else if $media == wide {\n\t\t@media (min-width: $screen-lg-desktop) { @content; }\n\t}\n\t@else {\n\t\t@media (min-width: $media) { @content; }\n\t}\n}\n"]}